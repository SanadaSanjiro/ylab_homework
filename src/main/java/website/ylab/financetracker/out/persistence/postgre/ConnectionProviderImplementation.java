package website.ylab.financetracker.out.persistence.postgre;

import website.ylab.financetracker.util.DataBaseConfigProvider;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 * Provides database connections
 */
public class ConnectionProviderImplementation implements ConnectionProvider {
    private static final String url = DataBaseConfigProvider.getDbUrl();
    private static final String user = DataBaseConfigProvider.getDbUser();
    private static final String password = DataBaseConfigProvider.getDbPassword();
    private static final String schema = DataBaseConfigProvider.getDbSchema();
    private static final String changelog = DataBaseConfigProvider.getLqChangelog();
    private static final String persistenceType = DataBaseConfigProvider.getPersistenceType();

    /**
     * Static method to get connection to Database to run queries
     * @return Connection, generated by DriverManager.getConnection method
     * @throws SQLException as it describe in DriverManager.getConnection method
     */
    @Override
    public Connection getConnection() throws SQLException {
        return DriverManager.getConnection(url, user, password);
    }

    /**
     * Returns schema name from config file
     * @return String schema name
     */
    @Override
    public String getSchema() {
        return schema;
    }

    /**
     * Returns path to master changelog from config file
     * @return String path to master changelog
     */
    @Override
    public String getChangelog() { return changelog; }

    @Override
    public String getPersistenceType() { return persistenceType; }
}