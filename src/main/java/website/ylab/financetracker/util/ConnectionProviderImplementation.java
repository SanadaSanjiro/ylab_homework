package website.ylab.financetracker.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.concurrent.TimeUnit;

/**
 * Provides database connections
 */
public class ConnectionProviderImplementation implements ConnectionProvider {
    private final String url;
    private final String user;
    private final String password;
    private final String schema;
    private final String changelog;
    private final String persistenceType;

    public ConnectionProviderImplementation() {
        this.url = DataBaseConfigProvider.getDbUrl();
        this.user = DataBaseConfigProvider.getDbUser();
        this.password = DataBaseConfigProvider.getDbPassword();
        this.schema = DataBaseConfigProvider.getDbSchema();
        this.changelog = DataBaseConfigProvider.getLqChangelog();
        this.persistenceType = DataBaseConfigProvider.getPersistenceType();
        System.out.println("Connection Provider: url = " + url);
        try {
            DriverManager.getDriver(url);
        } catch (SQLException exception) {
            System.out.println("ConnectionProviderImplementation: Trying to obtain driver " +  exception.getMessage());
        }
    }

    /**
     * Static method to get connection to Database to run queries
     * @return Connection, generated by DriverManager.getConnection method
     * @throws SQLException as it describe in DriverManager.getConnection method
     */
    @Override
    public Connection getConnection() throws SQLException {
        return DriverManager.getConnection(url, user, password);
    }

    /**
     * Returns schema name from config file
     * @return String schema name
     */
    @Override
    public String getSchema() {
        return schema;
    }

    /**
     * Returns path to master changelog from config file
     * @return String path to master changelog
     */
    @Override
    public String getChangelog() { return changelog; }

    @Override
    public String getPersistenceType() { return persistenceType; }
}